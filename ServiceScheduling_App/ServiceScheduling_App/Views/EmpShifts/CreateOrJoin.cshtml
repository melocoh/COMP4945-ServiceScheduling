@model ServiceScheduling_App.Models.ServiceShift

@{ ViewData["Title"] = "Create or Join"; }


<head>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css"
          integrity="sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l" crossorigin="anonymous">
    <title>Index</title>

    <style>

        #blockContainer {
            display: block;
            margin-left: 0%;
            margin-right: 5%;
            margin-top: 0%;
            margin-bottom: auto;
            border: 1px solid transparent;
            border-radius: 10px;
            padding: 1px;
        }

        #message {
            font-size: 20px;
            font-weight: bold;
        }

        #message2 {
            font-size: 15px;
            font-weight: 600;
        }

        #schedulebox {
            border: 1px solid grey;
            width: 100%;
            height: 600px;
            margin: 20px;
        }

        .statusbutton {
            margin: 15px;
            width: 120px;
        }

        .hyperlinks {
            margin: 15px;
            font-size: 12px;
            text-align: center;
        }

        .logininput {
            width: 300px;
        }

        .splitline {
            width: 100%;
        }

        .scrolldiv {
            overflow-y: scroll;
        }
    </style>
</head>

<body>

    <div id="mainContainer">
        <div id="dynamicContainer" class="d-flex flex-column">
            <div class="d-flex justify-content-start">
                <div>
                    <h1>Create or Join</h1>
                    <h4>Service Shift</h4>
                </div>
            </div>
            <hr class="splitline">
            <div class="container">
                <div class="row">
                    <!-- Fill Out Information -->
                    <div class="col">
                        <form asp-action="Create">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label for="Service" class="control-label">Service</label>
                                <select for="ServId" id="serviceInput" class="form-control" asp-items="ViewBag.SerTitle">
                                    <option id="serviceOption" value="">Select a service</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="Location" class="control-label">Location</label>
                                <select for="Location" id="locationInput" class="form-control" disabled asp-items="ViewBag.SerLocation">
                                    <option value="">Select a location</option>
                                </select>
                                <span asp-validation-for="SerLocation" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="DayOfWeek" class="control-label">Day of the week</label>
                                <select for="DayOfWeek" id="dayInput" class="form-control" disabled asp-items="ViewBag.SerDayOfWeek">
                                    <option value="">Select a day</option>
                                </select>
                                <span for="DayOfWeek" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="StartEndTime" class="control-label">Time</label>
                                <select for="StartEndTime" id="timeInput" class="form-control" disabled asp-items="ViewBag.SerStartEndTime">
                                    <option value="">Select a time</option>
                                </select>
                            </div>
                        </form>
                        <div class="form-group">
                            @*Button trigger modal*@
                            </br>
                            @*<button type="button" id="btn-create" class="btn btn-info" data-toggle="modal" data-target="#exampleModalCenter">
                                    Back
                                </button>*@

                            <button type="button" id="btn-check" class="btn btn-primary">
                                Check Shift
                            </button>

                            @*Modal*@
                            <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                                <div class="modal-dialog modal-dialog-centered" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLongTitle">Service Shift Confirmation</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <p id='serviceTitle'>Service: Therapy</p>
                                            <p id='serviceLocation'>Location: Burnaby</p>
                                            <p id='serviceDay'>Day of Week: Monday</p>
                                            <p id='serviceTime'>Time: 11:00:00</p>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                            @*<a href="@Url.Action("EmpShifts","Index")">*@
                                            <button type="button" id="btn-confirm" class="btn btn-primary">Confirm</button>
                                            @*</a>*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Available Weekly Sessions -->
                    <div class="col">
                        <div id="schedulebox" class="d-flex flex-column bd-highlight mb-3">
                            <h4 style="text-align: center;" class="mt-1">Available Weekly Sessions</h4>

                            <div class="container scrolldiv" id="scheduleContainer">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
            integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
            integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js"
            integrity="sha384-+YQ4JLhjyBLPDQt//I+STsc9iw4uQqACwlvpslubQzn4u2UU2UFM80nGisd026JF" crossorigin="anonymous"></script>

    <script>

        $(document).on('click', '#btn-create', function () {

            let serviceType = document.getElementById("serviceTitle");
            serviceType.innerText =  "Service: " + $("#serviceInput option:selected").text();
            let serviceLoc = document.getElementById("serviceLocation");
            serviceLoc.innerText = "Location: " + $("#locationInput option:selected").text();
            let serviceDay = document.getElementById("serviceDay");
            serviceDay.innerText = "Day of Week: " + $("#dayInput option:selected").text();
            let serviceTime = document.getElementById("serviceTime");
            serviceTime.innerText = "Time: " + $("#timeInput option:selected").text();
        });

        // when check shifts button is clicked
        $(document).on('click', '#btn-check', function () {

            @* manually add data to the div *@
             @*addShiftToSchedule({
                employeeNames: ["Saem Lee"],
                numberOfEmployees: 1,
                numberOfMaxEmployees: 3,
                serviceShiftId: 3
            })*@

            @* add generated data *@
            getFilteredShifts();
        });

        // when service is selected
        $("#serviceInput").change(function () {

            var select = $("#serviceInput option:selected").text();
            console.log(select);

            // removes all location options
            $('#locationInput option').remove();

            // next input is enabled.
            $('#locationInput').prop("disabled", false); // Element(s) are now enabled.


            // enters filtered location options
            getFilteredLocations();
        });

        // when location is selected
        $("#locationInput").change(function () {

            var select = $("#locationInput option:selected").text();
            console.log(select);

            // removes all day options
            $('#dayInput option').remove();

            // next input is enabled.
            $('#dayInput').prop("disabled", false);

            // enters filtered day options
            getFilteredDayOfWeek();
        });

        // when day is selected
        $("#dayInput").change(function () {

            var select = $("#dayInput option:selected").val();
            console.log(select);

            // removes all time options
            $('#timeInput option').remove();

            // next input is enabled.
            $('#timeInput').prop("disabled", false); // Element(s) are now enabled.

            // enters filtered time options
            getFilteredTime();
        });



        // ajax call to send parameter and fetch filtered locations
        // GET
        // ROUTE: /EmpShifts/GetFilteredLocations
        function getFilteredLocations() {

            $.ajax({
                type: 'GET',
                url: '/EmpShifts/GetFilteredLocations?servTitle=' + $("#serviceInput option:selected").text(),
                dataType: 'JSON',
                success: function (data) {
                    console.log(data);

                    $("#locationInput").append($("<option/>", {
                        text: "Select Location"
                    }));

                    for (let i = 0; i < data.length; i++) {
                        $("#locationInput").append($("<option/>", {
                            text: data[i]
                        }));
                    }
                }
            });
        }

        // ajax call to send parameter and fetch filtered day
        // ROUTE: /EmpShifts/GetFilteredDayOfWeek
        function getFilteredDayOfWeek() {

            let daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

            $.ajax({
                type: 'GET',
                url: '/EmpShifts/GetFilteredDayOfWeek?servTitle=' + $("#serviceInput option:selected").text() + '&location=' + $("#locationInput option:selected").text(),
                dataType: 'JSON',
                success: function (data) {
                    console.log(data);

                    $("#dayInput").append($("<option/>", {
                        text: "Select Location"
                    }));

                    for (let i = 0; i < data.length; i++) {
                        $("#dayInput").append($("<option/>", {
                            text: daysOfWeek[data[i]]
                        }));
                    }
                }
            });
        }

        // ajax call to send parameter and fetch filtered time
        // ROUTE: /EmpShifts/GetFilteredTime
        function getFilteredTime() {

            $.ajax({
                type: 'GET',
                url: '/EmpShifts/GetFilteredTime?servTitle=' + $("#serviceInput option:selected").text() + '&location=' + $("#locationInput option:selected").text() + '&dayOfWeek=' + $("#dayInput option:selected").text(),
                dataType: 'JSON',
                success: function (data) {
                    console.log(data);

                    $("#timeInput").append($("<option/>", {
                        text: "Select Location"
                    }));

                    for (let i = 0; i < data.length; i++) {
                        $("#timeInput").append($("<option/>", {
                            text: data[i]
                        }));
                    }
                }
            });
        }

        // ajax call to send parameter and fetch filtered shifts
        // ROUTE: /EmpShifts/GetFilteredShifts
        function getFilteredShifts() {

            $.ajax({
                type: 'GET',
                url: '/EmpShifts/GetFilteredShifts?servTitle=' + $("#serviceInput option:selected").text() + '&location=' + $("#locationInput option:selected").text()
                    + '&dayOfWeek=' + $("#dayInput option:selected").text() + '&startToEndTime=' + $("#timeInput option:selected").text(),
                dataType: 'JSON',
                success: function (data) {
                    console.log(data);
                    document.getElementById("scheduleContainer").innerHTML = '';
                    for(let i = 0; i < data.length; i++)
                    {
                        addShiftToSchedule(data[i]);
                    }

                }
            });
        }


        // ajax call to send parameter and fetch filtered shifts
        // ROUTE: /EmpShifts/JoinShift
        function postJoinShift(serviceShiftId) {

            $.ajax({
                type: 'POST',
                url: '/EmpShifts/JoinShift?EmpId=' + 4 + '&ServiceShiftId=' + serviceShiftId,
                dataType: 'JSON',
                success: function (data) {
                alert(data.success);
            },
            error: function (xhr, textStatus, error) {
                console.log(error);
            }
        });
        }



        // ajax call to send parameter and fetch filtered shifts
        // ROUTE: /EmpShifts/GetFilteredShifts
        @*function getShiftInfo(serviceShiftId) {
            let daysOfWeek = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
            $.ajax({
                type: 'GET',
                url: '/EmpShifts/GetShiftInfo?servShiftId=' + serviceShiftId,
                dataType: 'JSON',
                success: function (data) {
                    console.log(data);


                    let serviceType = document.getElementById("serviceTitle");
                    serviceType.innerText =  "Service: " + data.servTitle;
                    let serviceLoc = document.getElementById("serviceLocation");
                    serviceLoc.innerText = "Location: " + data.location;
                    let serviceDay = document.getElementById("serviceDay");
                    serviceDay.innerText = "Day of Week: " + daysOfWeek[data.dayOfWeek];
                    let serviceTime = document.getElementById("serviceTime");
                    serviceTime.innerText = "Time: " + data.time;
                }
            });
        }*@


        @* Helper *@

        function addShiftToSchedule(data) {

            let createDiv = document.createElement("div");
            createDiv.setAttribute('id', data.serviceShiftId);
            createDiv.setAttribute('class', "row border m-3");
            document.getElementById("scheduleContainer").appendChild(createDiv);

            let createDiv2 = document.createElement("div");
            createDiv2.setAttribute('class', "col-9");
            createDiv.appendChild(createDiv2);

            let shiftDetailsText = document.createElement("p");
            shiftDetailsText.appendChild(document.createTextNode(`Num of Employee: ${data.numberOfEmployees}/${data.numberOfMaxEmployees}`));
            createDiv2.appendChild(shiftDetailsText);

            shiftDetailsText = document.createElement("p");

            let names = "";

            for(let i = 0; i < data.employeeNames.length; i++)
            {
                names += data.employeeNames[i] + ((i == i - 1) ? ', ' : ' ');
            }

            shiftDetailsText.appendChild(document.createTextNode(`Employee: ${names}`));
            createDiv2.appendChild(shiftDetailsText);

            let createDiv3 = document.createElement("div");
            createDiv3.setAttribute('class', "col-3");
            createDiv3.setAttribute('style', "padding: 30px;");
            createDiv.appendChild(createDiv3);

            let joinButton = document.createElement("button");
            joinButton.setAttribute('type', "button");
            joinButton.setAttribute('class', "btn btn-info");
            joinButton.setAttribute('data-toggle', "modal");
            joinButton.setAttribute('data-target', "#exampleModalCenter");
            joinButton.appendChild(document.createTextNode("Join"));
            createDiv3.appendChild(joinButton);

             @*joinButton.addEventListener('click', function () {
                postJoinShift(data.serviceShiftId);
            });*@

            let confirmButton = document.getElementById("btn-confirm");
            confirmButton.addEventListener('click', function () {
                postJoinShift(data.serviceShiftId);
            });

            @*joinButton.addEventListener('click', function (data) { clickConfirm(data.serviceShiftId)});*@

                @* get shift info via service shift ID *@

                @* generates the modal for the service *@
                @* getShiftInfo(data.serviceShiftId); *@
        }

    </script>
</body>







@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
