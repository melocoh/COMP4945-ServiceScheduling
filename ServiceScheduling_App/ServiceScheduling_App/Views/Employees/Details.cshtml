@model ServiceScheduling_App.Models.Employee

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Employee</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FullName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Password)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Password)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.JobType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.JobType.JobId)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.EmpId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<br />

<div>
    <h2>Employee Stats</h2>
    <hr />
    <div class="d-flex flex-row">
        <div style="margin-right: 2px;">
            <select id="chartTypeSelect" class="dropdown form-control" name="chartType">
                <option style="display:none">-- Select Job --</option>
                <option value="revenue">Revenue</option>
                <option value="outcomes">Client Outcome</option>
                <option value="performance">Performance</option>
            </select>
        </div>
        <div style="margin-left: 2px;">
            <button id="chart-gen" class="btn btn-info">Generate Bar Graph</button>
        </div>
    </div>

    <br />
    
    <canvas id="chart-container"></canvas>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.0.2/chart.min.js"></script>

<script>
    $(document).ready(() => {
        var chart = document.getElementById('chart-container').getContext('2d');
        let chartType;
        let chartData;
        let graphSelection;
        var genChart;
        $("#chart-gen").click(() => {
            graphSelection = document.getElementById('chartTypeSelect').value;
            if (graphSelection == "revenue") {
                /** REVENUE GRAPH */
                $.ajax({
                    type: "GET",
                    url: "ChartDetailsRevenue",
                    dataType: "JSON",
                    contentType: "application/json",
                    success: (json) => {
                        console.log(json);
                        chartType = json.type;
                        chartData = json.data;
                        genChart = new Chart(chart, {
                            type: chartType,
                            data: {
                                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                                datasets: [{
                                    label: 'Revenue',
                                    data: chartData,
                                    fill: false,
                                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                    borderColor: 'rgb(255, 99, 132)',
                                    tension: 0.1
                                }]
                            },
                        })
                        return genChart;
                    },
                    error: (xhr, status, errorThrown) => {
                        console.log(status);
                        console.log(errorThrown);
                    }
                });
                genChart.destroy();
            } else if (graphSelection == "outcomes") {
                /** CLIENT OUTCOME GRAPH */
                $.ajax({
                    type: "GET",
                    url: "ChartDetailsOutcome",
                    dataType: "JSON",
                    contentType: "application/json",
                    success: (json) => {
                        console.log(json);
                        chartType = json.type;
                        chartData = json.data;
                        genChart = new Chart(chart, {
                            type: chartType,
                            data: {
                                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                                datasets: [{
                                    label: 'Incomplete Client Transactions',
                                    data: chartData,
                                    backgroundColor: 'rgba(255, 99, 132, 0.5)'
                                },
                                {
                                    label: 'Completed Client Transactions',
                                    data: chartData,
                                    backgroundColor: 'rgba(54, 162, 235, 0.5)'
                                }]
                            },
                        })
                        return genChart;
                    },
                    error: (xhr, status, errorThrown) => {
                        console.log(status);
                        console.log(errorThrown);
                    }
                });
                genChart.destroy();
            } else if (graphSelection == "performance") {
                /** PERFORMANCE GRAPH */
                $.ajax({
                    type: "GET",
                    url: "ChartDetailsPerformance",
                    dataType: "JSON",
                    contentType: "application/json",
                    success: (json) => {
                        console.log(json);
                        chartType = json.type;
                        chartData = json.data;
                        genChart = new Chart(chart, {
                            type: chartType,
                            data: {
                                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                                datasets: [{
                                    label: 'Working Hours',
                                    data: chartData,
                                    fill: false,
                                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                    borderColor: 'rgb(54, 162, 235)',
                                    tension: 0.1
                                }]
                            },
                        })
                        return genChart;
                    },
                    error: (xhr, status, errorThrown) => {
                        console.log(status);
                        console.log(errorThrown);
                    }
                });
                genChart.destroy();
            }
        });
    });
</script>